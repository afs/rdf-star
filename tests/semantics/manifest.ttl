# RDF Schema and Semantics tests
## Distributed under both the W3C Test Suite License[1] and the W3C 3-
## clause BSD License[2]. To contribute to a W3C Test Suite, see the
## policies and contribution forms [3]
##
## 1. http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
## 2. http://www.w3.org/Consortium/Legal/2008/03-bsd-license
## 3. http://www.w3.org/2004/10/27-testcases

@prefix rdf:    <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix rdft:   <http://www.w3.org/ns/rdftest#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .

<> rdf:type mf:Manifest ;
  rdfs:label "RDF* Semantics tests" ;
  mf:entries (
      <#all-identical-embedded-triples-are-the-same>
      <#bnodes-in-embedded-subject> 
      <#bnodes-in-embedded-object>
      <#bnodes-in-embedded-subject-and-object>
      <#bnodes-in-embedded-subject-and-object-fail>
      <#same-bnode-same-embedded-term>
      <#different-bnodes-same-embedded-term>
      <#malformed-lireral>
      <#malformed-lireral-bnode>
      <#opaque-lireral>
  ) .

<#all-identical-embedded-triples-are-the-same> a mf:PositiveEntailmentTest;
  mf:name "all-identical-embedded-triples-are-the-same";
  rdfs:comment """Multiple occurences of the same embedded triples are undistinguishable in the abstract model.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test001a.ttl>;
  mf:result <test001r.ttl> .

<#bnodes-in-embedded-subject> a mf:PositiveEntailmentTest;
  mf:name "bnodes-in-embedded-subject";
  rdfs:comment """Terms in embedded triples can be replaced by fresh bnodes.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test002a.ttl>;
  mf:result <test002sr.ttl> .

<#bnodes-in-embedded-object> a mf:PositiveEntailmentTest;
  mf:name "bnodes-in-embedded-object";
  rdfs:comment """Terms in embedded triples can be replaced by fresh bnodes.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test002a.ttl>;
  mf:result <test002or.ttl> .

<#bnodes-in-embedded-subject-and-object> a mf:PositiveEntailmentTest;
  mf:name "bnodes-in-embedded-subject-and-object";
  rdfs:comment """Terms in embedded triples can be replaced by fresh bnodes.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test002a.ttl>;
  mf:result <test002sor.ttl> .

<#bnodes-in-embedded-subject-and-object-fail> a mf:NegativeEntailmentTest;
  mf:name "bnodes-in-embedded-subject-and-object-fail";
  rdfs:comment """The same bnode can not match different embedded terms.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test002a.ttl>;
  mf:result <test002sbr.ttl> .

<#same-bnode-same-embedded-term> a mf:PositiveEntailmentTest;
  mf:name "same-bnode-same-embedded-term";
  rdfs:comment """Different bnodes can match identical embedded terms.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test003a.ttl>;
  mf:result <test002sbr.ttl> .

<#different-bnodes-same-embedded-term> a mf:PositiveEntailmentTest;
  mf:name "different-bnodes-same-embedded-term";
  rdfs:comment """Different bnodes can match identical embedded terms.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "simple" ;
  mf:recognizedDatatypes ( ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <test003a.ttl>;
  mf:result <test002sor.ttl> .

## TODO add tests where blank nodes are constrained by other triples

<#malformed-lireral> a mf:NegativeEntailmentTest;
  mf:name "maformed-literal";
  rdfs:comment """Malformed literals are allowed when embedded.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "RDFS" ;
  mf:recognizedDatatypes ( xsd:integer ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <malformed-literal.ttl>;
  mf:result false .

<#malformed-lireral-bnode> a mf:NegativeEntailmentTest;
  mf:name "maformed-literal-bnode";
  rdfs:comment """Malformed literals can be replaced by blank nodes.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "RDFS" ;
  mf:recognizedDatatypes ( xsd:integer ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <malformed-literal.ttl>;
  mf:result <test002or.ttl> .

<#opaque-lireral> a mf:NegativeEntailmentTest;
  mf:name "opauqe-literal";
  rdfs:comment """Embedded literals are opaque, even when their datatype is recognized.""";
  rdft:approval rdft:Proposed;
  mf:entailmentRegime "RDFS" ;
  mf:recognizedDatatypes ( xsd:integer ) ;
  mf:unrecognizedDatatypes ( ) ;
  mf:action <non-canonical-literal.ttl>;
  mf:result <canonical-literal.ttl> .
